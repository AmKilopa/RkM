// === –ú–û–î–£–õ–¨ –õ–û–ì–û–í –û–ë–ù–û–í–õ–ï–ù–ò–ô ===
class ChangelogModule {
    constructor() {
        this.commits = [];
        this.isLoading = false;
    }
    
    async show() {
        const modal = `
            <div class="modal changelog-modal">
                <div class="modal-header">
                    <h3 class="modal-title">üìã –õ–æ–≥–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π</h3>
                    <button onclick="window.modals.hide()" class="modal-close">&times;</button>
                </div>
                <div class="modal-body">
                    <div id="changelog-content">
                        <div style="text-align: center; padding: 3rem;">
                            <div class="loading-spinner"></div>
                            <p style="margin-top: 1rem; color: var(--text-muted);">–ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π...</p>
                        </div>
                    </div>
                </div>
            </div>
        `;
        
        window.modals.show(modal);
        await this.loadCommits();
    }
    
    async loadCommits() {
        if (this.isLoading) return;
        this.isLoading = true;
        
        const config = window.RkMConfig?.github;
        if (!config) {
            this.renderConfigError();
            this.isLoading = false;
            return;
        }
        
        try {
            const response = await fetch(`${config.apiUrl}/commits?per_page=20`);
            
            if (response.status === 404) {
                this.renderRepositoryNotFound();
                this.isLoading = false;
                return;
            }
            
            if (!response.ok) {
                throw new Error(`GitHub API error: ${response.status}`);
            }
            
            this.commits = await response.json();
            this.renderCommits();
        } catch (error) {
            this.renderError();
        }
        
        this.isLoading = false;
    }
    
    renderCommits() {
        const content = document.getElementById('changelog-content');
        if (!content) return;
        
        const commitsHtml = this.commits.map(commit => {
            const date = new Date(commit.commit.author.date);
            const timeAgo = this.getTimeAgo(date);
            
            return `
                <div class="commit-item">
                    <div class="commit-header">
                        <div class="commit-sha">#${commit.sha.substring(0, 7)}</div>
                        <div class="commit-time">${timeAgo}</div>
                    </div>
                    <div class="commit-message">${this.escapeHtml(commit.commit.message)}</div>
                    <div class="commit-author">
                        ${commit.author?.avatar_url ? `<img src="${commit.author.avatar_url}" alt="" class="author-avatar">` : ''}
                        <span>${commit.commit.author.name}</span>
                    </div>
                    <div class="commit-date">${date.toLocaleString('ru')}</div>
                </div>
            `;
        }).join('');
        
        content.innerHTML = `
            <div class="changelog-header">
                <div>
                    <h2>üìã –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π</h2>
                    <p>–ü–æ—Å–ª–µ–¥–Ω–∏–µ ${this.commits.length} –∫–æ–º–º–∏—Ç–æ–≤</p>
                </div>
                <div class="changelog-controls">
                    <button onclick="window.changelogModule.refresh()" class="refresh-btn">üîÑ –û–±–Ω–æ–≤–∏—Ç—å</button>
                </div>
            </div>
            <div class="commits-list">
                ${commitsHtml}
            </div>
        `;
    }
    
    renderRepositoryNotFound() {
        const content = document.getElementById('changelog-content');
        if (!content) return;
        
        const config = window.RkMConfig?.github;
        const repoName = config ? `${config.owner}/${config.repo}` : 'AmKilopa/RkM';
        
        content.innerHTML = `
            <div class="repo-not-found">
                <div class="repo-icon">üìÇ</div>
                <h3>–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω</h3>
                <p>GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π "${repoName}" –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</p>
                <div class="repo-info">
                    <p><strong>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:</strong></p>
                    <ul>
                        <li>–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω</li>
                        <li>–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π</li>
                        <li>–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –≤ config.js</li>
                    </ul>
                </div>
                <button onclick="window.open('https://github.com/new', '_blank')" class="create-repo-btn">
                    üìù –°–æ–∑–¥–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
                </button>
            </div>
        `;
    }
    
    renderConfigError() {
        const content = document.getElementById('changelog-content');
        if (!content) return;
        
        content.innerHTML = `
            <div class="error-message">
                <div class="error-icon">‚öôÔ∏è</div>
                <h3>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h3>
                <p>–ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª config.js –∏–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è GitHub</p>
                <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ —Ñ–∞–π–ª js/config.js –ø–æ–¥–∫–ª—é—á–µ–Ω –≤ index.html</p>
            </div>
        `;
    }
    
    renderError() {
        const content = document.getElementById('changelog-content');
        if (!content) return;
        
        content.innerHTML = `
            <div class="error-message">
                <div class="error-icon">‚ùå</div>
                <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h3>
                <p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π</p>
                <button onclick="window.changelogModule.loadCommits()" class="retry-btn">
                    üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                </button>
            </div>
        `;
    }
    
    async refresh() {
        const content = document.getElementById('changelog-content');
        if (content) {
            content.innerHTML = `
                <div style="text-align: center; padding: 3rem;">
                    <div class="loading-spinner"></div>
                    <p style="margin-top: 1rem; color: var(--text-muted);">–û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ...</p>
                </div>
            `;
        }
        await this.loadCommits();
    }
    
    getTimeAgo(date) {
        const now = new Date();
        const diffInSeconds = Math.floor((now - date) / 1000);
        
        if (diffInSeconds < 60) return '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
        if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} –º–∏–Ω –Ω–∞–∑–∞–¥`;
        if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} —á –Ω–∞–∑–∞–¥`;
        if (diffInSeconds < 2592000) return `${Math.floor(diffInSeconds / 86400)} –¥–Ω –Ω–∞–∑–∞–¥`;
        
        return date.toLocaleDateString('ru');
    }
    
    escapeHtml(text) {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è
window.changelogModule = new ChangelogModule();