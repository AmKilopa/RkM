// === –ú–û–î–£–õ–¨ –°–û–ó–î–ê–ù–ò–Ø –ü–û–î–ú–ï–ù–´ ===
class SubstitutionModule {
    constructor() {
        this.isAuthenticated = false;
        this.password = 'admin123';
    }
    
    show() {
        // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        if (!this.isAuthenticated) {
            this.showAuthForm();
            return;
        }
        
        this.showSubstitutionForm();
    }
    
    showAuthForm() {
        const authPage = `
            <div class="page active" id="substitution-auth-page">
                <button class="back-btn">‚Üê –ù–∞–∑–∞–¥</button>
                <div class="form-container">
                    <h2 style="text-align: center; margin-bottom: 2rem; background: linear-gradient(45deg, #fff, var(--accent-blue)); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text;">üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h2>
                    <p style="text-align: center; color: var(--text-muted); margin-bottom: 3rem;">
                        –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–º–µ–Ω—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
                    </p>
                    <form id="auth-form">
                        <div class="form-group">
                            <label class="form-label">–ü–∞—Ä–æ–ª—å:</label>
                            <input type="password" id="auth-password" class="form-input" placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å" required>
                        </div>
                        <button type="submit" class="btn btn-primary" style="width: 100%;">
                            üîì –í–æ–π—Ç–∏
                        </button>
                    </form>
                </div>
            </div>
        `;
        
        // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const pages = document.querySelectorAll('.page:not(#home-page)');
        pages.forEach(page => page.remove());
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        document.body.insertAdjacentHTML('beforeend', authPage);
        
        // –°–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        document.getElementById('home-page').classList.remove('active');
        
        this.bindAuthEvents();
    }
    
    bindAuthEvents() {
        const authForm = document.getElementById('auth-form');
        if (authForm) {
            authForm.addEventListener('submit', (e) => {
                e.preventDefault();
                this.handleAuth();
            });
        }
    }
    
    async handleAuth() {
        const passwordInput = document.getElementById('auth-password');
        const password = passwordInput.value;
        
        if (password === this.password) {
            this.isAuthenticated = true;
            window.notifications?.success('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
            
            if (window.soundSystem) {
                window.soundSystem.playSuccess();
            }
            
            // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            setTimeout(() => {
                this.showSubstitutionForm();
            }, 500);
        } else {
            window.notifications?.error('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å');
            
            if (window.soundSystem) {
                window.soundSystem.playError();
            }
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –æ—à–∏–±–∫–∏
            passwordInput.style.borderColor = 'var(--accent-red)';
            passwordInput.style.boxShadow = '0 0 0 3px rgba(220, 53, 69, 0.25)';
            
            setTimeout(() => {
                passwordInput.style.borderColor = '';
                passwordInput.style.boxShadow = '';
                passwordInput.value = '';
                passwordInput.focus();
            }, 1000);
        }
    }
    
    showSubstitutionForm() {
        const substitutionPage = `
            <div class="page active" id="substitution-page">
                <button class="back-btn">‚Üê –ù–∞–∑–∞–¥</button>
                <div class="form-container">
                    <h2 style="text-align: center; margin-bottom: 2rem; background: linear-gradient(45deg, #fff, var(--accent-green)); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text;">üîí –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–º–µ–Ω—ã</h2>
                    <p style="text-align: center; color: var(--text-muted); margin-bottom: 3rem;">
                        –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–º–µ–Ω—ã Steam –ø—Ä–æ—Ñ–∏–ª—è
                    </p>
                    <form id="substitution-form">
                        <div class="form-group">
                            <label class="form-label">Steam ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</label>
                            <input type="text" id="steam-id" class="form-input" placeholder="76561198000000000" required>
                            <small style="color: var(--text-muted); margin-top: 0.5rem; display: block;">
                                –í–≤–µ–¥–∏—Ç–µ 17-–∑–Ω–∞—á–Ω—ã–π Steam ID –ø—Ä–æ—Ñ–∏–ª—è
                            </small>
                        </div>
                        <div class="form-group">
                            <label class="form-label">–ù–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º:</label>
                            <input type="text" id="nickname" class="form-input" placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º" required>
                            <small style="color: var(--text-muted); margin-top: 0.5rem; display: block;">
                                –ù–∏–∫–Ω–µ–π–º –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤–º–µ—Å—Ç–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ
                            </small>
                        </div>
                        <div class="form-group">
                            <label class="form-label">–°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–æ–≤—ã–π –∞–≤–∞—Ç–∞—Ä (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):</label>
                            <input type="url" id="avatar-url" class="form-input" placeholder="https://example.com/avatar.jpg">
                            <small style="color: var(--text-muted); margin-top: 0.5rem; display: block;">
                                –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —Å–ª—É—á–∞–π–Ω—ã–π –∞–≤–∞—Ç–∞—Ä
                            </small>
                        </div>
                        <div class="form-group">
                            <label class="form-label">–£—Ä–æ–≤–µ–Ω—å Steam (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):</label>
                            <input type="number" id="steam-level" class="form-input" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 25" min="0" max="5000">
                            <small style="color: var(--text-muted); margin-top: 0.5rem; display: block;">
                                –£—Ä–æ–≤–µ–Ω—å –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ
                            </small>
                        </div>
                        <button type="submit" class="btn btn-success" style="width: 100%;">
                            ‚ú® –°–æ–∑–¥–∞—Ç—å –ø–æ–¥–º–µ–Ω—É
                        </button>
                    </form>
                </div>
            </div>
        `;
        
        // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const pages = document.querySelectorAll('.page:not(#home-page)');
        pages.forEach(page => page.remove());
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–¥–º–µ–Ω—ã
        document.body.insertAdjacentHTML('beforeend', substitutionPage);
        
        // –°–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        document.getElementById('home-page').classList.remove('active');
        
        this.bindSubstitutionEvents();
    }
    
    bindSubstitutionEvents() {
        const substitutionForm = document.getElementById('substitution-form');
        if (substitutionForm) {
            substitutionForm.addEventListener('submit', (e) => {
                e.preventDefault();
                this.handleSubstitution();
            });
        }
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è Steam ID –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        const steamIdInput = document.getElementById('steam-id');
        if (steamIdInput) {
            steamIdInput.addEventListener('input', (e) => {
                this.validateSteamId(e.target);
            });
        }
    }
    
    validateSteamId(input) {
        const value = input.value;
        const isValid = /^765611980\d{8}$/.test(value) && value.length === 17;
        
        if (value.length > 0) {
            if (isValid) {
                input.style.borderColor = 'var(--accent-green)';
                input.style.boxShadow = '0 0 0 3px rgba(40, 167, 69, 0.25)';
            } else {
                input.style.borderColor = 'var(--accent-red)';
                input.style.boxShadow = '0 0 0 3px rgba(220, 53, 69, 0.25)';
            }
        } else {
            input.style.borderColor = '';
            input.style.boxShadow = '';
        }
    }
    
    async handleSubstitution() {
        const steamId = document.getElementById('steam-id').value;
        const nickname = document.getElementById('nickname').value;
        const avatarUrl = document.getElementById('avatar-url').value;
        const steamLevel = document.getElementById('steam-level').value;
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è Steam ID
        if (!/^765611980\d{8}$/.test(steamId)) {
            window.notifications?.error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç Steam ID');
            return;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        const submitBtn = document.querySelector('#substitution-form button[type="submit"]');
        const originalText = submitBtn.innerHTML;
        submitBtn.innerHTML = '‚è≥ –°–æ–∑–¥–∞–µ–º –ø–æ–¥–º–µ–Ω—É...';
        submitBtn.disabled = true;
        
        try {
            // –ò–º–∏—Ç–∞—Ü–∏—è API –∑–∞–ø—Ä–æ—Å–∞
            await this.simulateSubstitutionCreation({
                steamId,
                nickname,
                avatarUrl,
                steamLevel: steamLevel ? parseInt(steamLevel) : null
            });
            
            window.notifications?.success('–ü–æ–¥–º–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
            
            if (window.soundSystem) {
                window.soundSystem.playSuccess();
            }
            
            // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
            document.getElementById('substitution-form').reset();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            this.showResult({
                steamId,
                nickname,
                avatarUrl,
                steamLevel
            });
            
        } catch (error) {
            window.notifications?.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–º–µ–Ω—ã: ' + error.message);
            
            if (window.soundSystem) {
                window.soundSystem.playError();
            }
        } finally {
            submitBtn.innerHTML = originalText;
            submitBtn.disabled = false;
        }
    }
    
    async simulateSubstitutionCreation(data) {
        // –ò–º–∏—Ç–∞—Ü–∏—è API –∑–∞–ø—Ä–æ—Å–∞ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
        return new Promise((resolve, reject) => {
            setTimeout(() => {
                // –ò–º–∏—Ç–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –æ—à–∏–±–∫–∏ (10% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å)
                if (Math.random() < 0.1) {
                    reject(new Error('–°–µ—Ä–≤–µ—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'));
                } else {
                    resolve({
                        success: true,
                        id: Math.random().toString(36).substring(7),
                        createdAt: new Date().toISOString()
                    });
                }
            }, 2000);
        });
    }
    
    showResult(data) {
        const resultModal = `
            <div class="modal">
                <div class="modal-header">
                    <h3 class="modal-title">‚úÖ –ü–æ–¥–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∞</h3>
                    <button onclick="window.modals.hide()" class="modal-close">&times;</button>
                </div>
                <div class="modal-body">
                    <div style="text-align: center; margin-bottom: 2rem;">
                        <div style="font-size: 4rem; margin-bottom: 1rem;">üéâ</div>
                        <p style="color: var(--text-secondary); margin-bottom: 2rem;">
                            –ü–æ–¥–º–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
                        </p>
                    </div>
                    
                    <div style="background: rgba(255, 255, 255, 0.05); padding: 1.5rem; border-radius: var(--border-radius-lg); margin-bottom: 2rem;">
                        <h4 style="color: var(--accent-green); margin-bottom: 1rem;">üìã –î–µ—Ç–∞–ª–∏ –ø–æ–¥–º–µ–Ω—ã:</h4>
                        <div style="display: grid; gap: 0.5rem;">
                            <div><strong>Steam ID:</strong> <code style="background: rgba(0,0,0,0.3); padding: 2px 6px; border-radius: 4px;">${data.steamId}</code></div>
                            <div><strong>–ù–∏–∫–Ω–µ–π–º:</strong> ${data.nickname}</div>
                            ${data.avatarUrl ? `<div><strong>–ê–≤–∞—Ç–∞—Ä:</strong> <a href="${data.avatarUrl}" target="_blank" style="color: var(--accent-blue);">–°—Å—ã–ª–∫–∞</a></div>` : ''}
                            ${data.steamLevel ? `<div><strong>–£—Ä–æ–≤–µ–Ω—å:</strong> ${data.steamLevel}</div>` : ''}
                            <div><strong>–°–æ–∑–¥–∞–Ω–æ:</strong> ${new Date().toLocaleString('ru')}</div>
                        </div>
                    </div>
                    
                    <div style="display: flex; gap: 1rem; justify-content: center;">
                        <button onclick="window.modals.hide()" class="btn btn-primary">
                            üëç –û—Ç–ª–∏—á–Ω–æ
                        </button>
                        <button onclick="window.substitutionModule.showSubstitutionForm(); window.modals.hide();" class="btn btn-secondary">
                            ‚ûï –°–æ–∑–¥–∞—Ç—å –µ—â–µ
                        </button>
                    </div>
                </div>
            </div>
        `;
        
        window.modals.show(resultModal);
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
window.substitutionModule = new SubstitutionModule();